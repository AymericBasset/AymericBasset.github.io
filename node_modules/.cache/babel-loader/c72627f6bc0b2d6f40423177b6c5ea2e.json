{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { breakpoints } from \"../styles/theme\";\n/**\n * Get the window height and width even when those sizes are changing\n */\n\nconst useWindowSize = () => {\n  _s();\n\n  const [windowWidth, setWidth] = useState(undefined);\n  const [windowHeight, setHeight] = useState(undefined);\n  const [deviceType, setWindowType] = useState('desktop');\n  useEffect(() => {\n    const getSize = () => {\n      const [width, height] = [window.innerWidth, window.innerHeight];\n      const {\n        startBigPhone,\n        startTablet,\n        startDesktop\n      } = breakpoints;\n      setWidth(width);\n      setHeight(height);\n\n      if (width < startBigPhone) {\n        setWindowType('smallPhone');\n      } else if (width < startTablet) {\n        setWindowType('bigPhone');\n      } else if (width < startDesktop) {\n        setWindowType('tablet');\n      }\n    };\n\n    window.addEventListener('resize', getSize);\n    getSize();\n    return () => {\n      window.removeEventListener('resize', getSize);\n    };\n  }, []);\n  return {\n    windowWidth,\n    windowHeight,\n    deviceType\n  };\n};\n\n_s(useWindowSize, \"5rkt+H9oEid4QW+V+fEvhEOf4AA=\");\n\nexport default useWindowSize;","map":{"version":3,"sources":["/home/aymeric/Desktop/portfolio_dev-dev/src/hooks/useWindowSize.js"],"names":["useEffect","useState","breakpoints","useWindowSize","windowWidth","setWidth","undefined","windowHeight","setHeight","deviceType","setWindowType","getSize","width","height","window","innerWidth","innerHeight","startBigPhone","startTablet","startDesktop","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,iBAA5B;AAGA;AACA;AACA;;AACA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,WAAD,EAAcC,QAAd,IAA0BJ,QAAQ,CAACK,SAAD,CAAxC;AACA,QAAM,CAACC,YAAD,EAAeC,SAAf,IAA4BP,QAAQ,CAACK,SAAD,CAA1C;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,SAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,OAAO,GAAG,MAAM;AACpB,YAAM,CAACC,KAAD,EAAQC,MAAR,IAAkB,CAACC,MAAM,CAACC,UAAR,EAAoBD,MAAM,CAACE,WAA3B,CAAxB;AACA,YAAM;AAAEC,QAAAA,aAAF;AAAiBC,QAAAA,WAAjB;AAA8BC,QAAAA;AAA9B,UAA8CjB,WAApD;AAEAG,MAAAA,QAAQ,CAACO,KAAD,CAAR;AACAJ,MAAAA,SAAS,CAACK,MAAD,CAAT;;AAEA,UAAID,KAAK,GAAGK,aAAZ,EAA2B;AACzBP,QAAAA,aAAa,CAAC,YAAD,CAAb;AACD,OAFD,MAEM,IAAIE,KAAK,GAAGM,WAAZ,EAAyB;AAC7BR,QAAAA,aAAa,CAAC,UAAD,CAAb;AACD,OAFK,MAEA,IAAIE,KAAK,GAAGO,YAAZ,EAA0B;AAC9BT,QAAAA,aAAa,CAAC,QAAD,CAAb;AACD;AAGF,KAhBD;;AAiBAI,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCT,OAAlC;AACAA,IAAAA,OAAO;AAEP,WAAO,MAAM;AACXG,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCV,OAArC;AACD,KAFD;AAGD,GAxBQ,EAwBN,EAxBM,CAAT;AA0BA,SAAO;AAAEP,IAAAA,WAAF;AAAeG,IAAAA,YAAf;AAA6BE,IAAAA;AAA7B,GAAP;AACD,CAhCD;;GAAMN,a;;AAkCN,eAAeA,aAAf","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { breakpoints } from \"../styles/theme\"\n\n\n/**\n * Get the window height and width even when those sizes are changing\n */\nconst useWindowSize = () => {\n  const [windowWidth, setWidth] = useState(undefined)\n  const [windowHeight, setHeight] = useState(undefined)\n  const [deviceType, setWindowType] = useState('desktop')\n\n  useEffect(() => {\n    const getSize = () => {\n      const [width, height] = [window.innerWidth, window.innerHeight]\n      const { startBigPhone, startTablet, startDesktop} = breakpoints\n      \n      setWidth(width)\n      setHeight(height)\n\n      if (width < startBigPhone) {\n        setWindowType('smallPhone')\n      }else if (width < startTablet) {\n        setWindowType('bigPhone')\n      }else if (width < startDesktop) {\n        setWindowType('tablet')\n      }\n      \n\n    }\n    window.addEventListener('resize', getSize)\n    getSize()\n\n    return () => {\n      window.removeEventListener('resize', getSize)\n    }\n  }, [])\n\n  return { windowWidth, windowHeight, deviceType }\n}\n\nexport default useWindowSize"]},"metadata":{},"sourceType":"module"}