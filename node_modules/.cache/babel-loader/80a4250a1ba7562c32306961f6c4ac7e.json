{"ast":null,"code":"/**\n * calag4n's helping log function\n * https://gist.github.com/calag4n/8fad1e9a1437b72c659a36c4c95b8f20\n * \n * @param {any} obj \n * @param {boolean | undefined} clear \n * @param {string} mapKey \n */export var log=function log(obj){var clear=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var mapKey=arguments.length>2?arguments[2]:undefined;var title=\"font-size: 19px; color: #e65264\";if(clear){console.clear();}if(mapKey){console.group(mapKey);obj.map(function(o){return console.log(o);});console.groupEnd(mapKey);}else if(Array.isArray(obj)){console.log(\"%c Array 👇️\",title);console.table(obj);}else if(typeof obj===\"string\"){console.log(\"%c String 👇️\",title);console.log(\"%c \".concat(obj),\"font-size: 14px; color: yellow\");}else{console.log(\"%c Object 👇️\",title);console.table(obj);}};","map":{"version":3,"sources":["/home/aymeric/Desktop/test_port/AymericBasset.github.io/src/utils/log.js"],"names":["log","obj","clear","mapKey","title","console","group","map","o","groupEnd","Array","isArray","table"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMA,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,CAACC,GAAD,CAA+B,IAAzBC,CAAAA,KAAyB,2DAAjB,IAAiB,IAAXC,CAAAA,MAAW,2CAChD,GAAMC,CAAAA,KAAK,CAAG,iCAAd,CAEA,GAAIF,KAAJ,CAAW,CACTG,OAAO,CAACH,KAAR,GACD,CAED,GAAIC,MAAJ,CAAY,CACVE,OAAO,CAACC,KAAR,CAAcH,MAAd,EACAF,GAAG,CAACM,GAAJ,CAAQ,SAAAC,CAAC,QAAIH,CAAAA,OAAO,CAACL,GAAR,CAAYQ,CAAZ,CAAJ,EAAT,EACAH,OAAO,CAACI,QAAR,CAAiBN,MAAjB,EACD,CAJD,IAIO,IAAIO,KAAK,CAACC,OAAN,CAAcV,GAAd,CAAJ,CAAwB,CAC7BI,OAAO,CAACL,GAAR,CAAY,cAAZ,CAA4BI,KAA5B,EACAC,OAAO,CAACO,KAAR,CAAcX,GAAd,EACD,CAHM,IAGA,IAAI,MAAOA,CAAAA,GAAP,GAAe,QAAnB,CAA6B,CAClCI,OAAO,CAACL,GAAR,CAAY,eAAZ,CAA6BI,KAA7B,EACAC,OAAO,CAACL,GAAR,cAAkBC,GAAlB,EAAyB,gCAAzB,EACD,CAHM,IAGA,CACLI,OAAO,CAACL,GAAR,CAAY,eAAZ,CAA6BI,KAA7B,EACAC,OAAO,CAACO,KAAR,CAAcX,GAAd,EACD,CACF,CArBM","sourcesContent":["/**\n * calag4n's helping log function\n * https://gist.github.com/calag4n/8fad1e9a1437b72c659a36c4c95b8f20\n * \n * @param {any} obj \n * @param {boolean | undefined} clear \n * @param {string} mapKey \n */\nexport const log = (obj, clear = true, mapKey) => {\n  const title = \"font-size: 19px; color: #e65264\"\n\n  if (clear) {\n    console.clear()\n  }\n\n  if (mapKey) {\n    console.group(mapKey)\n    obj.map(o => console.log(o))\n    console.groupEnd(mapKey)\n  } else if (Array.isArray(obj)) {\n    console.log(\"%c Array 👇️\", title)\n    console.table(obj)\n  } else if (typeof obj === \"string\") {\n    console.log(\"%c String 👇️\", title)\n    console.log(`%c ${obj}`, \"font-size: 14px; color: yellow\")\n  } else {\n    console.log(\"%c Object 👇️\", title)\n    console.table(obj)\n  }\n}"]},"metadata":{},"sourceType":"module"}