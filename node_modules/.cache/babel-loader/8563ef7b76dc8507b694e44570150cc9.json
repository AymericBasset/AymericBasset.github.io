{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/aymeric/Desktop/portfolio_dev-dev/src/components/Skills/index.js\",\n    _s = $RefreshSig$();\n\nimport MuiTreeView from '@material-ui/lab/TreeView';\nimport styled from 'styled-components';\nimport MinusSquare from './MinusSquare';\nimport PlusSquare from './PlusSquare';\nimport CloseSquare from './CloseSquare';\nimport TreeItem from './TreeItem';\nimport { skills } from '../../content/skills';\nimport withParallaxLayer from '../../HOC/withParallaxLayer';\nimport { device } from '../../styles/theme';\nimport { useSectionsSizing } from '../../contexts/sectionsSizingContext';\n/**\n * The skills tree view\n *\n * @component\n * @example\n * <TreeView>\n *   <TreeItem>\n *     <TreeItem />\n *   </TreeItem>\n * </TreeView>\n */\n\nconst Skills = () => {\n  _s();\n\n  const {\n    setSizes\n  } = useSectionsSizing();\n  /**\n   * Recursive function that render nested objects in TreeItem components\n   * @param {object} node Contains id, name & children properties.\n   * @returns JSX.Element | JSX.Element[]\n   */\n\n  const renderTree = ({\n    id,\n    name,\n    children\n  }) => /*#__PURE__*/_jsxDEV(TreeItem, {\n    nodeId: id,\n    label: name,\n    className: id === '1' ? 'Treeview-title' : '',\n    children: Array.isArray(children) ? children.map(node => renderTree(node)) : null\n  }, id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Section // ref={skillsRef}\n  , {\n    id: \"skills-section\",\n    children: /*#__PURE__*/_jsxDEV(TreeView // defaultExpanded={['1']}\n    , {\n      defaultCollapseIcon: /*#__PURE__*/_jsxDEV(MinusSquare, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 30\n      }, this),\n      defaultExpandIcon: /*#__PURE__*/_jsxDEV(PlusSquare, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 28\n      }, this),\n      defaultEndIcon: /*#__PURE__*/_jsxDEV(CloseSquare, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this),\n      onNodeToggle: (_, nodes) => setSizes({\n        action: 'toggleSkills',\n        value: nodes\n      }),\n      children: renderTree(skills)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Skills, \"WxGEgyE4nLU8r639yfOK6Awv2ck=\", false, function () {\n  return [useSectionsSizing];\n});\n\n_c = Skills;\nexport default _c2 = withParallaxLayer(Skills);\nconst Section = styled.section`\n  padding: 0 ${({\n  theme\n}) => theme.spacings.sectionPadding};\n  padding-top: ${({\n  theme\n}) => theme.spacings.skillsPaddingTop};\n  z-index: 99;\n\n  & *{\n\n  transition: width .2s ease-in-out;\n  }\n\n  & > ul > li > .MuiTreeItem-content > .MuiTreeItem-label{\n    font-size: ${({\n  theme\n}) => theme.fonts.size.treeView.title};\n  }\n\n`;\n_c3 = Section;\nconst TreeView = styled(MuiTreeView)`\n  margin: auto;\n  color: ${({\n  theme\n}) => theme.colors.primary};\n  flex-grow: 1;\n\n`;\n_c4 = TreeView;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Skills\");\n$RefreshReg$(_c2, \"%default%\");\n$RefreshReg$(_c3, \"Section\");\n$RefreshReg$(_c4, \"TreeView\");","map":{"version":3,"sources":["/home/aymeric/Desktop/portfolio_dev-dev/src/components/Skills/index.js"],"names":["MuiTreeView","styled","MinusSquare","PlusSquare","CloseSquare","TreeItem","skills","withParallaxLayer","device","useSectionsSizing","Skills","setSizes","renderTree","id","name","children","Array","isArray","map","node","_","nodes","action","value","Section","section","theme","spacings","sectionPadding","skillsPaddingTop","fonts","size","treeView","title","TreeView","colors","primary"],"mappings":";;;;;AAAA,OAAOA,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,iBAAT,QAAkC,sCAAlC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAeF,iBAAiB,EAAtC;AAEA;AACF;AACA;AACA;AACA;;AACE,QAAMG,UAAU,GAAG,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA;AAAZ,GAAD,kBACjB,QAAC,QAAD;AAAmB,IAAA,MAAM,EAAEF,EAA3B;AAA+B,IAAA,KAAK,EAAEC,IAAtC;AAA4C,IAAA,SAAS,EAAED,EAAE,KAAK,GAAP,GAAa,gBAAb,GAAgC,EAAvF;AAAA,cACGG,KAAK,CAACC,OAAN,CAAcF,QAAd,IAA0BA,QAAQ,CAACG,GAAT,CAAaC,IAAI,IAAIP,UAAU,CAACO,IAAD,CAA/B,CAA1B,GAAmE;AADtE,KAAeN,EAAf;AAAA;AAAA;AAAA;AAAA,UADF;;AAMA,sBACE,QAAC,OAAD,CACE;AADF;AAEE,IAAA,EAAE,EAAC,gBAFL;AAAA,2BAIE,QAAC,QAAD,CACE;AADF;AAEE,MAAA,mBAAmB,eAAE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAFvB;AAGE,MAAA,iBAAiB,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAHrB;AAIE,MAAA,cAAc,eAAE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAJlB;AAKE,MAAA,YAAY,EAAE,CAACO,CAAD,EAAIC,KAAJ,KAAcV,QAAQ,CAAC;AAACW,QAAAA,MAAM,EAAE,cAAT;AAAyBC,QAAAA,KAAK,EAAEF;AAAhC,OAAD,CALtC;AAAA,gBAOGT,UAAU,CAACN,MAAD;AAPb;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA9BD;;GAAMI,M;UACiBD,iB;;;KADjBC,M;AAgCN,qBAAeH,iBAAiB,CAACG,MAAD,CAAhC;AAEA,MAAMc,OAAO,GAAGvB,MAAM,CAACwB,OAAQ;AAC/B,eAAe,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,QAAN,CAAeC,cAAe;AAC5D,iBAAiB,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,QAAN,CAAeE,gBAAiB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACI,KAAN,CAAYC,IAAZ,CAAiBC,QAAjB,CAA0BC,KAAM;AAChE;AACA;AACA,CAdA;MAAMT,O;AAgBN,MAAMU,QAAQ,GAAGjC,MAAM,CAACD,WAAD,CAAc;AACrC;AACA,WAAW,CAAC;AAAE0B,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACS,MAAN,CAAaC,OAAQ;AAC/C;AACA;AACA,CALA;MAAMF,Q","sourcesContent":["import MuiTreeView from '@material-ui/lab/TreeView'\nimport styled from 'styled-components'\n\nimport MinusSquare from './MinusSquare'\nimport PlusSquare from './PlusSquare'\nimport CloseSquare from './CloseSquare'\nimport TreeItem from './TreeItem'\nimport { skills } from '../../content/skills'\nimport withParallaxLayer from '../../HOC/withParallaxLayer'\nimport { device } from '../../styles/theme'\nimport { useSectionsSizing } from '../../contexts/sectionsSizingContext'\n\n/**\n * The skills tree view\n *\n * @component\n * @example\n * <TreeView>\n *   <TreeItem>\n *     <TreeItem />\n *   </TreeItem>\n * </TreeView>\n */\nconst Skills = () => {\n  const { setSizes } = useSectionsSizing()\n\n  /**\n   * Recursive function that render nested objects in TreeItem components\n   * @param {object} node Contains id, name & children properties.\n   * @returns JSX.Element | JSX.Element[]\n   */\n  const renderTree = ({ id, name, children }) => (\n    <TreeItem key={id} nodeId={id} label={name} className={id === '1' ? 'Treeview-title' : '' }>\n      {Array.isArray(children) ? children.map(node => renderTree(node)) : null}\n    </TreeItem>\n  )\n\n  return (\n    <Section\n      // ref={skillsRef}\n      id=\"skills-section\"\n    >\n      <TreeView\n        // defaultExpanded={['1']}\n        defaultCollapseIcon={<MinusSquare />}\n        defaultExpandIcon={<PlusSquare />}\n        defaultEndIcon={<CloseSquare />}\n        onNodeToggle={(_, nodes) => setSizes({action: 'toggleSkills', value: nodes})}\n      >\n        {renderTree(skills)}\n      </TreeView>\n    </Section>\n  )\n}\n\nexport default withParallaxLayer(Skills)\n\nconst Section = styled.section`\n  padding: 0 ${({ theme }) => theme.spacings.sectionPadding};\n  padding-top: ${({ theme }) => theme.spacings.skillsPaddingTop};\n  z-index: 99;\n\n  & *{\n\n  transition: width .2s ease-in-out;\n  }\n\n  & > ul > li > .MuiTreeItem-content > .MuiTreeItem-label{\n    font-size: ${({ theme }) => theme.fonts.size.treeView.title};\n  }\n\n`\n\nconst TreeView = styled(MuiTreeView)`\n  margin: auto;\n  color: ${({ theme }) => theme.colors.primary};\n  flex-grow: 1;\n\n`\n"]},"metadata":{},"sourceType":"module"}