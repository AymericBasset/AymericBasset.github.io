{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/aymeric/Desktop/test_port/AymericBasset.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import{jsx as _jsx}from\"react/jsx-runtime\";function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  margin: auto;\\n  color: \",\";\\n  flex-grow: 1;\\n\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  padding: 0 \",\";\\n  padding-top: \",\";\\n  z-index: 99;\\n\\n  & *{\\n\\n  transition: width .2s ease-in-out;\\n  }\\n\\n  & > ul > li > .MuiTreeItem-content > .MuiTreeItem-label{\\n    font-size: \",\";\\n  }\\n\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import MuiTreeView from'@material-ui/lab/TreeView';import styled from'styled-components';import MinusSquare from'./MinusSquare';import PlusSquare from'./PlusSquare';import CloseSquare from'./CloseSquare';import TreeItem from'./TreeItem';import{skills}from'../../content/skills';import withParallaxLayer from'../../HOC/withParallaxLayer';import{device}from'../../styles/theme';import{useSectionsSizing}from'../../contexts/sectionsSizingContext';/**\n * The skills tree view\n *\n * @component\n * @example\n * <TreeView>\n *   <TreeItem>\n *     <TreeItem />\n *   </TreeItem>\n * </TreeView>\n */var Skills=function Skills(){var _useSectionsSizing=useSectionsSizing(),setSizes=_useSectionsSizing.setSizes;/**\n   * Recursive function that render nested objects in TreeItem components\n   * @param {object} node Contains id, name & children properties.\n   * @returns JSX.Element | JSX.Element[]\n   */var renderTree=function renderTree(_ref){var id=_ref.id,name=_ref.name,children=_ref.children;return/*#__PURE__*/_jsx(TreeItem,{nodeId:id,label:name,className:id==='1'?'Treeview-title':'',children:Array.isArray(children)?children.map(function(node){return renderTree(node);}):null},id);};return/*#__PURE__*/_jsx(Section// ref={skillsRef}\n,{id:\"skills-section\",children:/*#__PURE__*/_jsx(TreeView// defaultExpanded={['1']}\n,{defaultCollapseIcon:/*#__PURE__*/_jsx(MinusSquare,{}),defaultExpandIcon:/*#__PURE__*/_jsx(PlusSquare,{}),defaultEndIcon:/*#__PURE__*/_jsx(CloseSquare,{}),onNodeToggle:function onNodeToggle(_,nodes){return setSizes({action:'toggleSkills',value:nodes});},children:renderTree(skills)})});};export default withParallaxLayer(Skills);var Section=styled.section(_templateObject(),function(_ref2){var theme=_ref2.theme;return theme.spacings.sectionPadding;},function(_ref3){var theme=_ref3.theme;return theme.spacings.skillsPaddingTop;},function(_ref4){var theme=_ref4.theme;return theme.fonts.size.treeView.title;});var TreeView=styled(MuiTreeView)(_templateObject2(),function(_ref5){var theme=_ref5.theme;return theme.colors.primary;});","map":{"version":3,"sources":["/home/aymeric/Desktop/test_port/AymericBasset.github.io/src/components/Skills/index.js"],"names":["MuiTreeView","styled","MinusSquare","PlusSquare","CloseSquare","TreeItem","skills","withParallaxLayer","device","useSectionsSizing","Skills","setSizes","renderTree","id","name","children","Array","isArray","map","node","_","nodes","action","value","Section","section","theme","spacings","sectionPadding","skillsPaddingTop","fonts","size","treeView","title","TreeView","colors","primary"],"mappings":"0vBAAA,MAAOA,CAAAA,WAAP,KAAwB,2BAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,OAASC,MAAT,KAAuB,sBAAvB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,6BAA9B,CACA,OAASC,MAAT,KAAuB,oBAAvB,CACA,OAASC,iBAAT,KAAkC,sCAAlC,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,wBACED,iBAAiB,EADnB,CACXE,QADW,oBACXA,QADW,CAGnB;AACF;AACA;AACA;AACA,KACE,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,UAAGC,CAAAA,EAAH,MAAGA,EAAH,CAAOC,IAAP,MAAOA,IAAP,CAAaC,QAAb,MAAaA,QAAb,oBACjB,KAAC,QAAD,EAAmB,MAAM,CAAEF,EAA3B,CAA+B,KAAK,CAAEC,IAAtC,CAA4C,SAAS,CAAED,EAAE,GAAK,GAAP,CAAa,gBAAb,CAAgC,EAAvF,UACGG,KAAK,CAACC,OAAN,CAAcF,QAAd,EAA0BA,QAAQ,CAACG,GAAT,CAAa,SAAAC,IAAI,QAAIP,CAAAA,UAAU,CAACO,IAAD,CAAd,EAAjB,CAA1B,CAAmE,IADtE,EAAeN,EAAf,CADiB,EAAnB,CAMA,mBACE,KAAC,OACC;AADF,EAEE,EAAE,CAAC,gBAFL,uBAIE,KAAC,QACC;AADF,EAEE,mBAAmB,cAAE,KAAC,WAAD,IAFvB,CAGE,iBAAiB,cAAE,KAAC,UAAD,IAHrB,CAIE,cAAc,cAAE,KAAC,WAAD,IAJlB,CAKE,YAAY,CAAE,sBAACO,CAAD,CAAIC,KAAJ,QAAcV,CAAAA,QAAQ,CAAC,CAACW,MAAM,CAAE,cAAT,CAAyBC,KAAK,CAAEF,KAAhC,CAAD,CAAtB,EALhB,UAOGT,UAAU,CAACN,MAAD,CAPb,EAJF,EADF,CAgBD,CA9BD,CAgCA,cAAeC,CAAAA,iBAAiB,CAACG,MAAD,CAAhC,CAEA,GAAMc,CAAAA,OAAO,CAAGvB,MAAM,CAACwB,OAAV,mBACE,mBAAGC,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,QAAN,CAAeC,cAA9B,EADF,CAEI,mBAAGF,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,QAAN,CAAeE,gBAA9B,EAFJ,CAWI,mBAAGH,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACI,KAAN,CAAYC,IAAZ,CAAiBC,QAAjB,CAA0BC,KAAzC,EAXJ,CAAb,CAgBA,GAAMC,CAAAA,QAAQ,CAAGjC,MAAM,CAACD,WAAD,CAAT,oBAEH,mBAAG0B,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACS,MAAN,CAAaC,OAA5B,EAFG,CAAd","sourcesContent":["import MuiTreeView from '@material-ui/lab/TreeView'\nimport styled from 'styled-components'\n\nimport MinusSquare from './MinusSquare'\nimport PlusSquare from './PlusSquare'\nimport CloseSquare from './CloseSquare'\nimport TreeItem from './TreeItem'\nimport { skills } from '../../content/skills'\nimport withParallaxLayer from '../../HOC/withParallaxLayer'\nimport { device } from '../../styles/theme'\nimport { useSectionsSizing } from '../../contexts/sectionsSizingContext'\n\n/**\n * The skills tree view\n *\n * @component\n * @example\n * <TreeView>\n *   <TreeItem>\n *     <TreeItem />\n *   </TreeItem>\n * </TreeView>\n */\nconst Skills = () => {\n  const { setSizes } = useSectionsSizing()\n\n  /**\n   * Recursive function that render nested objects in TreeItem components\n   * @param {object} node Contains id, name & children properties.\n   * @returns JSX.Element | JSX.Element[]\n   */\n  const renderTree = ({ id, name, children }) => (\n    <TreeItem key={id} nodeId={id} label={name} className={id === '1' ? 'Treeview-title' : '' }>\n      {Array.isArray(children) ? children.map(node => renderTree(node)) : null}\n    </TreeItem>\n  )\n\n  return (\n    <Section\n      // ref={skillsRef}\n      id=\"skills-section\"\n    >\n      <TreeView\n        // defaultExpanded={['1']}\n        defaultCollapseIcon={<MinusSquare />}\n        defaultExpandIcon={<PlusSquare />}\n        defaultEndIcon={<CloseSquare />}\n        onNodeToggle={(_, nodes) => setSizes({action: 'toggleSkills', value: nodes})}\n      >\n        {renderTree(skills)}\n      </TreeView>\n    </Section>\n  )\n}\n\nexport default withParallaxLayer(Skills)\n\nconst Section = styled.section`\n  padding: 0 ${({ theme }) => theme.spacings.sectionPadding};\n  padding-top: ${({ theme }) => theme.spacings.skillsPaddingTop};\n  z-index: 99;\n\n  & *{\n\n  transition: width .2s ease-in-out;\n  }\n\n  & > ul > li > .MuiTreeItem-content > .MuiTreeItem-label{\n    font-size: ${({ theme }) => theme.fonts.size.treeView.title};\n  }\n\n`\n\nconst TreeView = styled(MuiTreeView)`\n  margin: auto;\n  color: ${({ theme }) => theme.colors.primary};\n  flex-grow: 1;\n\n`\n"]},"metadata":{},"sourceType":"module"}