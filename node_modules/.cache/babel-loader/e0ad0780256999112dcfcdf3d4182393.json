{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/aymeric/Desktop/test_port/AymericBasset.github.io/src/components/seo.js\";\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { config } from '../config/site';\n/**\n * Inject data in <head> for SEO purpose\n *\n * @component\n * @example\n * <SEO\n *   description='Page description'\n *   meta={[{property: 'meta-property', content: 'meta-content'}]}\n *   title='Page title'\n *   imageUrl='https://urlto.img'\n *   pageUrl='https://site.com/page-url'\n * />\n */\n\nconst SEO = ({\n  description,\n  title,\n  imageUrl,\n  pageUrl,\n  meta\n}) => {\n  const _description = description || config.siteDescription;\n\n  const _title = title || config.siteTitle;\n\n  const _imageUrl = imageUrl || config.siteImageUrl;\n\n  const _pageUrl = pageUrl || config.siteUrl;\n\n  const _meta = meta || config.meta;\n\n  const twitter = config.makeTwitterCard(_description, _title, _imageUrl);\n  const facebook = config.makeFBCard(_description, _title, _imageUrl, _pageUrl);\n  return /*#__PURE__*/_jsxDEV(Helmet, {\n    htmlAttributes: {\n      lang: config.siteLang\n    },\n    title: _title,\n    meta: [{\n      name: `description`,\n      content: _description\n    }].concat(twitter, facebook, _meta)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SEO;\nSEO.propTypes = {\n  description: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string,\n  imageUrl: PropTypes.string,\n  pageUrl: PropTypes.string\n};\nexport default SEO;\n\nvar _c;\n\n$RefreshReg$(_c, \"SEO\");","map":{"version":3,"sources":["/home/aymeric/Desktop/test_port/AymericBasset.github.io/src/components/seo.js"],"names":["PropTypes","Helmet","config","SEO","description","title","imageUrl","pageUrl","meta","_description","siteDescription","_title","siteTitle","_imageUrl","siteImageUrl","_pageUrl","siteUrl","_meta","twitter","makeTwitterCard","facebook","makeFBCard","lang","siteLang","name","content","concat","propTypes","string","arrayOf","object"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,KAAf;AAAsBC,EAAAA,QAAtB;AAAgCC,EAAAA,OAAhC;AAAyCC,EAAAA;AAAzC,CAAD,KAAqD;AAC/D,QAAMC,YAAY,GAAGL,WAAW,IAAIF,MAAM,CAACQ,eAA3C;;AACA,QAAMC,MAAM,GAAGN,KAAK,IAAIH,MAAM,CAACU,SAA/B;;AACA,QAAMC,SAAS,GAAGP,QAAQ,IAAIJ,MAAM,CAACY,YAArC;;AACA,QAAMC,QAAQ,GAAGR,OAAO,IAAIL,MAAM,CAACc,OAAnC;;AACA,QAAMC,KAAK,GAAGT,IAAI,IAAIN,MAAM,CAACM,IAA7B;;AAEA,QAAMU,OAAO,GAAGhB,MAAM,CAACiB,eAAP,CAAuBV,YAAvB,EAAqCE,MAArC,EAA6CE,SAA7C,CAAhB;AACA,QAAMO,QAAQ,GAAGlB,MAAM,CAACmB,UAAP,CAAkBZ,YAAlB,EAAgCE,MAAhC,EAAwCE,SAAxC,EAAmDE,QAAnD,CAAjB;AAEA,sBACE,QAAC,MAAD;AACE,IAAA,cAAc,EAAE;AACdO,MAAAA,IAAI,EAAEpB,MAAM,CAACqB;AADC,KADlB;AAIE,IAAA,KAAK,EAAEZ,MAJT;AAKE,IAAA,IAAI,EAAE,CACJ;AACEa,MAAAA,IAAI,EAAG,aADT;AAEEC,MAAAA,OAAO,EAAEhB;AAFX,KADI,EAKJiB,MALI,CAKGR,OALH,EAKYE,QALZ,EAKsBH,KALtB;AALR;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAxBD;;KAAMd,G;AA0BNA,GAAG,CAACwB,SAAJ,GAAgB;AACdvB,EAAAA,WAAW,EAAEJ,SAAS,CAAC4B,MADT;AAEdpB,EAAAA,IAAI,EAAER,SAAS,CAAC6B,OAAV,CAAkB7B,SAAS,CAAC8B,MAA5B,CAFQ;AAGdzB,EAAAA,KAAK,EAAEL,SAAS,CAAC4B,MAHH;AAIdtB,EAAAA,QAAQ,EAAEN,SAAS,CAAC4B,MAJN;AAKdrB,EAAAA,OAAO,EAAEP,SAAS,CAAC4B;AALL,CAAhB;AAQA,eAAezB,GAAf","sourcesContent":["import PropTypes from 'prop-types'\nimport { Helmet } from 'react-helmet'\nimport { config } from '../config/site'\n\n/**\n * Inject data in <head> for SEO purpose\n *\n * @component\n * @example\n * <SEO\n *   description='Page description'\n *   meta={[{property: 'meta-property', content: 'meta-content'}]}\n *   title='Page title'\n *   imageUrl='https://urlto.img'\n *   pageUrl='https://site.com/page-url'\n * />\n */\nconst SEO = ({ description, title, imageUrl, pageUrl, meta }) => {\n  const _description = description || config.siteDescription\n  const _title = title || config.siteTitle\n  const _imageUrl = imageUrl || config.siteImageUrl\n  const _pageUrl = pageUrl || config.siteUrl\n  const _meta = meta || config.meta\n\n  const twitter = config.makeTwitterCard(_description, _title, _imageUrl)\n  const facebook = config.makeFBCard(_description, _title, _imageUrl, _pageUrl)\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang: config.siteLang,\n      }}\n      title={_title}\n      meta={[\n        {\n          name: `description`,\n          content: _description,\n        },\n      ].concat(twitter, facebook, _meta)}\n    />\n  )\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string,\n  imageUrl: PropTypes.string,\n  pageUrl: PropTypes.string,\n}\n\nexport default SEO\n"]},"metadata":{},"sourceType":"module"}